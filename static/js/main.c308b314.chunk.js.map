{"version":3,"sources":["searchHeader/searchHeader.js","services/getResources.js","getRandomId/index.js","errorIndicator/errorIndicator.js","errorIndicator/index.js","spinner/index.js","spinner/spinner.js","pages/main.js","pages/card.js","pagination/pagination.js","app/app.js","index.js"],"names":["Container","styled","div","Label","label","Input","input","SearchHeader","savedValue","onSetValueSearch","type","placeholder","value","onChange","e","el","target","GetResources","url","a","fetch","res","ok","Error","status","json","GetAllRepo","sortParam","page","perPage","GetOneRepo","user","GetContributors","GetRandomId","Math","random","toString","ErrorBlock","ErrorHeader","span","ErrorIndicator","Spinner","className","Table","table","Tr","tr","props","block","Td","td","name","withRouter","history","match","valueSearch","onChangeTotalCount","useState","result","setResult","loading","toggleLoading","error","toggleError","number","params","numberPage","useEffect","then","results","total_count","catch","renderList","useCallback","arr","pages","items","map","repo","key","to","pathname","query","full","full_name","stargazers_count","pushed_at","href","html_url","spinner","errorIndicator","content","Fragment","Img","img","itemName","selectedRepo","setSelectedRepo","contributors","setContributors","onError","slice","renderContributors","users","src","avatar_url","alt","login","owner","language","description","Ul","ul","Li","li","StyledLink","Link","Active","totalCount","pageNumber","countPages","numbersArr","setNumberArr","newCountPages","ceil","i","push","renderPaginator","selectedNumber","num","App","setValueSearch","setSaveValue","setTotalCount","changeValueSearch","changeTotalCount","count","path","render","exact","location","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c308b314.chunk.js","sourcesContent":["import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  font-size: 1.5rem;\n  color: grey;\n`;\n\nconst Input = styled.input`\n  width: 25rem;\n  background-color: lightgray;\n  font-size: 18px;\n  padding: 1rem;\n  margin: 1rem;\n  border: none;\n  border-radius: 3px;\n`;\n\nconst SearchHeader = ({ savedValue, onSetValueSearch }) => {\n  const pushValue = (el) => {\n    onSetValueSearch(el);\n  };\n\n  return (\n    <Container>\n      <Label>\n        Search:\n        <Input type=\"text\" placeholder=\"Name\" value={savedValue} onChange={(e) => pushValue(e.target.value)} />\n      </Label>\n    </Container>\n  );\n};\n\nexport default SearchHeader;\n","const GetResources = async (url) => {\n  const res = await fetch(url);\n  if (!res.ok) {\n    throw new Error(`Could not fetch ${url}, received ${res.status}`);\n  }\n  return await res.json();\n};\n\nconst GetAllRepo = async (sortParam, page, perPage) => {\n  const res = await GetResources(`https://api.github.com/search/repositories?q=${sortParam}&sort=stars&order=desc&page=${page}&per_page=${perPage}`);\n  return res;\n};\n\nconst GetOneRepo = async (user) => {\n  return await GetResources(`https://api.github.com/repos/${user}`);\n};\n\nconst GetContributors = async (user) => {\n  return await GetResources(`https://api.github.com/repos/${user}/contributors?q=contributions&order=desc`);\n};\n\nexport { GetAllRepo, GetOneRepo, GetContributors };\n","const GetRandomId = () => {\n  return Math.random().toString();\n};\n\nexport default GetRandomId;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst ErrorBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  color: mediumvioletred;\n`;\n\nconst ErrorHeader = styled.span`\n  font-size: 1.7rem;\n`;\n\nconst ErrorIndicator = () => {\n  return (\n    <ErrorBlock>\n      <ErrorHeader>Oooops!</ErrorHeader>\n      <span>something has gone wrong</span>\n      <span>(but we will fix it soon...)</span>\n    </ErrorBlock>\n  );\n};\n\nexport default ErrorIndicator;\n","import ErrorIndicator from './errorIndicator';\n\nexport default ErrorIndicator;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-spinner-ko7k0gxm2dl\">\n      <div className=\"ldio-7e8hrnsh05l\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { GetAllRepo } from '../services';\nimport GetRandomId from '../getRandomId';\nimport ErrorIndicator from '../errorIndicator';\nimport Spinner from '../spinner';\n\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  margin: 2rem auto;\n`;\n\nconst Tr = styled.tr`\n  margin: 1.5rem;\n  display: ${(props) => (props.block ? 'block' : 'table')};\n`;\n\nconst Td = styled.td`\n  width: 200px;\n  word-break: break-all;\n  text-align: center;\n  vertical-align: middle;\n  font-weight: ${(props) => (props.name ? 'bold' : 'regular')};\n  font-size: ${(props) => (props.name ? '20px' : '16px')};\n`;\nconst Main = ({ history, match, valueSearch, onChangeTotalCount }) => {\n  const [result, setResult] = useState('');\n  const [loading, toggleLoading] = useState(true);\n  const [error, toggleError] = useState(false);\n  const [perPage, setPerPage] = useState(10);\n\n  const { number } = match.params;\n  const numberPage = number ? number : 1;\n\n  const onError = () => {\n    toggleLoading(false);\n    toggleError(true);\n  };\n\n  useEffect(() => {\n    GetAllRepo(valueSearch, numberPage, perPage)\n      .then((results) => {\n        setResult(results);\n        onChangeTotalCount(results.total_count, perPage);\n        toggleLoading(false);\n        toggleError(false);\n      })\n      .catch(() => onError());\n  }, [valueSearch, numberPage, onChangeTotalCount, perPage]);\n\n  const renderList = useCallback((arr, pages) => {\n    const listRepo = arr.items.map((repo) => {\n      const key = GetRandomId();\n      return (\n        <Tr key={key}>\n          <Td>\n            <Link to={{ pathname: `/repositories/${repo.name}`, query: { full: `${repo.full_name}` } }}>{repo.name}</Link>\n          </Td>\n          <Td>{repo.stargazers_count}</Td>\n          <Td>{repo.pushed_at}</Td>\n          <Td>\n            <a href={repo.html_url}>{repo.html_url}</a>\n          </Td>\n        </Tr>\n      );\n    });\n    return listRepo;\n  }, []);\n\n  const spinner = loading ? <Spinner /> : null;\n  const errorIndicator = error ? <ErrorIndicator /> : null;\n  const hasData = !(loading || error);\n  const content = hasData ? renderList(result) : null;\n\n  return (\n    <React.Fragment>\n      {spinner}\n      {errorIndicator}\n      <Table>\n        <tbody>{content}</tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Main);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { GetOneRepo, GetContributors } from '../services';\nimport GetRandomId from '../getRandomId';\nimport ErrorIndicator from '../errorIndicator';\nimport Spinner from '../spinner';\n\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  margin: 3rem auto;\n  border: 1px solid grey;\n`;\n\nconst Tr = styled.tr`\n  width: 100%;\n  display: table;\n  margin: 1.5rem 0;\n  text-align: center;\n`;\n\nconst Td = styled.td`\n  width: ${(props) => (props.block ? '100%' : '200px')};\n  text-align: center;\n  vertical-align: middle;\n  font-weight: ${(props) => (props.name ? 'bold' : 'regular')};\n  font-size: ${(props) => (props.name ? '20px' : '16px')};\n`;\n\nconst Img = styled.img`\n  width: 130px;\n  border-radius: 100px;\n`;\n\nconst Card = ({ itemName, value }) => {\n  const [selectedRepo, setSelectedRepo] = useState('');\n  const [contributors, setContributors] = useState('');\n  const [loading, toggleLoading] = useState(true);\n  const [error, toggleError] = useState(false);\n\n  const onError = () => {\n    toggleLoading(false);\n    toggleError(true);\n  };\n\n  useEffect(() => {\n    GetOneRepo(itemName)\n      .then((results) => {\n        setSelectedRepo(results);\n        toggleLoading(false);\n        toggleError(false);\n      })\n      .catch(() => onError());\n\n    GetContributors(itemName)\n      .then((results) => {\n        results.slice(0, 9);\n        setContributors(results);\n        toggleLoading(false);\n        toggleError(false);\n      })\n      .catch(() => onError());\n  }, [itemName]);\n\n  const renderContributors = useCallback(\n    (users) => {\n      if (contributors) {\n        const contributorsArr = users.map((user) => {\n          const key = GetRandomId();\n          return (\n            <Tr key={key}>\n              <Td>\n                <Img src={user.avatar_url} alt=\"avatar\" />\n              </Td>\n              <Td>{user.login}</Td>\n            </Tr>\n          );\n        });\n        return contributorsArr;\n      }\n    },\n    [contributors]\n  );\n\n  const renderList = useCallback(\n    (repo) => {\n      if (selectedRepo) {\n        return (\n          <React.Fragment>\n            <Tr>\n              <Td name=\"name\">{repo.name}</Td>\n              <Td>Stargazers:<br />{repo.stargazers_count}\n              </Td>\n              <Td>Last commit:<br />{repo.pushed_at}\n              </Td>\n            </Tr>\n            <Tr>\n              <Td>\n                <Img src={repo.owner.avatar_url} alt=\"avatar\" />\n              </Td>\n              <Td>Nickname:<br />{repo.owner.login}\n              </Td>\n              <Td>\n                <a href={repo.owner.html_url}>{repo.owner.html_url}</a>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td block>Languages:<br />{repo.language}\n              </Td>\n            </Tr>\n            <Tr>\n              <Td block>Description:<br />{repo.description}\n              </Td>\n            </Tr>\n            <Tr>\n              <Td block>Contributors:</Td>\n            </Tr>\n            {renderContributors(contributors)}\n          </React.Fragment>\n        );\n      }\n    },\n    [contributors, renderContributors, selectedRepo]\n  );\n\n  const spinner = loading ? <Spinner /> : null;\n  const errorIndicator = error ? <ErrorIndicator /> : null;\n  const hasData = !(loading || error);\n  const content = hasData ? renderList(selectedRepo) : null;\n\n  return (\n    <React.Fragment>\n      {errorIndicator}\n      {spinner}\n      <Table>\n        <tbody>{content}</tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Card);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport GetRandomId from '../getRandomId';\n\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: flex;\n  justify-content: center;\n  padding: 0;\n  list-style-type: none;\n`;\n\nconst Li = styled.li`\n  padding: 0.7rem;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nconst Active = styled.a`\n  color: red;\n`;\n\nconst Pagination = ({ match, pageNumber, totalCount }) => {\n  let { number } = match.params;\n  let [countPages, perPage] = totalCount;\n\n  const [numbersArr, setNumberArr] = useState([]);\n  const pages = countPages / perPage;\n  const newCountPages = pages !== 0 ? (pages > 10 ? 10 : Math.ceil(pages)) : 1;\n\n  useEffect(() => {\n    let arr = [];\n    for (let i = 1; i <= newCountPages; i++) {\n      arr.push(i);\n      setNumberArr(arr);\n    }\n  }, [newCountPages]);\n\n  const renderPaginator = useCallback(\n    (selectedNumber) => {\n      if (selectedNumber > newCountPages || typeof selectedNumber === 'undefined') {\n        selectedNumber = 1;\n      }\n\n      const listNumbers = numbersArr.map((num) => {\n        const key = GetRandomId();\n        if (num === +selectedNumber) {\n          return (\n            <Li key={key}>\n              <Active to={`/page/${num}`} className=\"active\">\n                {num}\n              </Active>\n            </Li>\n          );\n        } else {\n          return (\n            <Li key={key}>\n              <StyledLink to={`/page/${num}`}>{num}</StyledLink>\n            </Li>\n          );\n        }\n      });\n      return listNumbers;\n    },\n    [newCountPages, numbersArr]\n  );\n\n  return <Ul>{renderPaginator(number)}</Ul>;\n};\n\nexport default withRouter(Pagination);\n","import React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport SearchHeader from '../searchHeader';\nimport { Main, Card } from '../pages';\nimport Pagination from '../pagination';\n\nconst App = () => {\n  const [valueSearch, setValueSearch] = useState('stars:>=0');\n  const [savedValue, setSaveValue] = useState('');\n  const [totalCount, setTotalCount] = useState('');\n\n  const changeValueSearch = useCallback((value) => {\n    setValueSearch(value);\n    setSaveValue(value);\n  }, []);\n\n  const changeTotalCount = useCallback((count, perPage) => {\n    setTotalCount([count, perPage]);\n  }, []);\n\n  return (\n    <Router>\n      <Route path=\"/page/:number?\" render={() => <SearchHeader savedValue={savedValue} onSetValueSearch={changeValueSearch} />} exact />\n      <Switch>\n        <Route path=\"/page/:number?\" render={() => <Main valueSearch={valueSearch} onChangeTotalCount={changeTotalCount} />} />\n        <Route\n          path=\"/repositories/:name\"\n          exact\n          render={({ location }) => {\n            const { full } = location.query;\n            return <Card itemName={full} />;\n          }}\n        />\n        <Redirect to=\"/page\" />\n      </Switch>\n      <Route path=\"/page/:number?\" render={() => <Pagination totalCount={totalCount} />} exact />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}